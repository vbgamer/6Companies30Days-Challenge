class Solution:
    def maxProfit(self, k, prices):
        n = len(prices)
        if n < 0 :
            return 0
# unlimited transaction
        if k >=  n //2 :
            profit  = 0
            for i in range(1, n):
                if prices[i] > prices[i - 1]:
                    profit += prices[i] - prices[i - 1]
            return profit
# limited transaction
        lp = [[0] * n for _ in range(k + 1)]
        
        for i in range(1, k + 1):
            maxDiff = -prices[0] 
            for j in range(1, n):
                lp[i][j] = max(lp[i][j - 1], prices[j] + maxDiff)
                maxDiff = max(maxDiff, lp[i - 1][j] - prices[j])
        
        return lp[k][n - 1]


        
